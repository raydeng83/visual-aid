{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/nav-bar/nav-bar.component.css","webpack:///./src/app/components/nav-bar/nav-bar.component.html","webpack:///./src/app/components/nav-bar/nav-bar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from './components/home/home.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n<app-nav-bar></app-nav-bar>\\n<router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'visual-aid';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport {FormsModule} from '@angular/forms';\nimport {ToasterModule} from 'angular2-toaster';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HotkeyModule} from 'angular2-hotkeys';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavBarComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    ToasterModule.forRoot(),\n    CommonModule,\n    HotkeyModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <h1 class=\\\"display-5\\\">Chord Visualization Practice Tool</h1>\\n  <p class=\\\"lead\\\">This tool generate random chords and you can practice visualizing chord tones based on the chord.</p>\\n  <form (submit)=\\\"onStart()\\\">\\n    <!--Select Keys-->\\n    <h6>Select Keys:</h6>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"keys-C\\\" [(ngModel)]=\\\"keys[0]\\\" name=\\\"keys-C\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"keys-C\\\">C</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"keys[1]\\\" id=\\\"keys-Db\\\" name=\\\"keys-Db\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"keys-Db\\\">Db</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"keys[2]\\\" id=\\\"keys-D\\\" name=\\\"keys-D\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"keys-D\\\">D</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group \\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"keys[3]\\\" id=\\\"keys-Eb\\\" name=\\\"keys-Eb\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"keys-Eb\\\">Eb</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"keys[4]\\\" id=\\\"keys-E\\\" name=\\\"keys-E\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"keys-E\\\">E</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"keys[5]\\\" id=\\\"keys-F\\\" name=\\\"keys-F\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"keys-F\\\">F</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"keys[6]\\\" id=\\\"keys-Gb\\\" name=\\\"keys-Gb\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"keys-Gb\\\">Gb</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"keys[7]\\\" id=\\\"keys-G\\\" name=\\\"keys-G\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"keys-G\\\">G</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"keys[8]\\\" id=\\\"keys-Ab\\\" name=\\\"keys-Ab\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"keys-Ab\\\">Ab</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"keys[9]\\\" id=\\\"keys-A\\\" name=\\\"keys-A\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"keys-A\\\">A</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"keys[10]\\\" id=\\\"keys-Bb\\\" name=\\\"keys-Bb\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"keys-Bb\\\">Bb</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"keys[11]\\\" id=\\\"keys-B\\\" name=\\\"keys-B\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"keys-B\\\">B</label>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!--Select Chord Types-->\\n    <h6>Select Chord Types:</h6>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"type-major7\\\" [(ngModel)]=\\\"chordTypes[0]\\\" name=\\\"type-major7\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"type-major7\\\">Major7</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"type-minor7\\\" [(ngModel)]=\\\"chordTypes[1]\\\" name=\\\"type-minor7\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"type-minor7\\\">Minor7</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"type-dominant7\\\" [(ngModel)]=\\\"chordTypes[2]\\\" name=\\\"type-dominant7\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"type-dominant7\\\">Dominant7</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"type-half-diminished7\\\" [(ngModel)]=\\\"chordTypes[3]\\\" name=\\\"type-half-diminished7\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"type-half-diminished7\\\">Half-Diminished7</label>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!--Select Chord Tones-->\\n    <h6>Select Chord Tones:</h6>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"tone-3\\\" [(ngModel)]=\\\"chordToneNumber[0]\\\" name=\\\"tone-3\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"tone-3\\\">3rd</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"tone-5\\\" [(ngModel)]=\\\"chordToneNumber[1]\\\" name=\\\"tone-5\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"tone-5\\\">5th</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"tone-7\\\" [(ngModel)]=\\\"chordToneNumber[2]\\\" name=\\\"tone-7\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"tone-7\\\">7th</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"tone-9\\\" [(ngModel)]=\\\"chordToneNumber[3]\\\" name=\\\"tone-9\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"tone-9\\\">9th</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"tone-11\\\" [(ngModel)]=\\\"chordToneNumber[4]\\\" name=\\\"tone-11\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"tone-11\\\">11th</label>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-check form-check-inline\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"tone-13\\\" [(ngModel)]=\\\"chordToneNumber[5]\\\" name=\\\"tone-13\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"tone-13\\\">13th</label>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-outline-dark btn-block\\\">Reset</button>\\n  </form>\\n\\n\\n  <!--Display Content-->\\n  <hr class=\\\"my-4\\\">\\n  <div class=\\\"row text-center\\\">\\n    <div class=\\\"col-sm-5\\\">\\n      <h1 style=\\\"font-size: 7em;\\\">{{currentKey}} {{currentChordType}}</h1>\\n    </div>\\n    <div class=\\\"col-sm-2\\\" style=\\\"border: 5px dashed black;\\\">\\n      <h1 style=\\\"font-size: 4em; margin-top: 20px;\\\">{{currentChordTone}}</h1>\\n    </div>\\n    <div class=\\\"col-sm-5\\\">\\n      <div style=\\\"margin-top: 20px;\\\">\\n      <img src=\\\"assets/images/stave.png\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <br>\\n  <button class=\\\"btn btn-outline-dark btn-block\\\" (click)=\\\"onNewValue()\\\">New Value</button>\\n\\n  <hr>\\n  <div>\\n    <img src=\\\"assets/images/fretboard.png\\\" class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\" style=\\\"width: 100%;\\\">\\n  </div>\\n</div>\\n\\n<toaster-container></toaster-container>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ToasterService} from 'angular2-toaster';\nimport {Hotkey, HotkeysService} from 'angular2-hotkeys';\n\nconst keyArr = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\n// const chordTypeArr = ['Major7', 'Minor7', 'Dominant7', 'Half-diminished']\nconst chordTypeArr = ['Δ', '-7', '7', 'Φ'];\nconst chordToneNumberArr = ['3rd', '5th', '7th', '9th', '11th', '13th'];\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  public keys = [true, true, true, true, true, true, true, true, true, true, true, true];\n  public chordTypes = [true, true, true, true];\n  public chordToneNumber = [true, true, true, true, true, true];\n\n  public currentKeys = [];\n  public currentChordTypes = [];\n  public currentChordTones = [];\n\n  public currentKey;\n  public currentChordType;\n  public currentChordTone;\n\n  constructor(private toasterService: ToasterService, private hotkeysService: HotkeysService) {\n    this.hotkeysService.add(new Hotkey('space', (event: KeyboardEvent): boolean => {\n      this.onNewValue();\n      return false; // Prevent bubbling\n    }));\n  }\n\n  onStart() {\n    this.currentKeys = [];\n    this.currentChordTypes = [];\n    this.currentChordTones = [];\n\n    for (let i = 0; i < this.keys.length; i++) {\n      if (this.keys[i]) {\n        this.currentKeys.push(keyArr[i]);\n      }\n    }\n\n    for (let i = 0; i < this.chordTypes.length; i++) {\n      if (this.chordTypes[i]) {\n        this.currentChordTypes.push(chordTypeArr[i]);\n      }\n    }\n\n    for (let i = 0; i < this.chordToneNumber.length; i++) {\n      if (this.chordToneNumber[i]) {\n        this.currentChordTones.push(chordToneNumberArr[i]);\n      }\n    }\n\n    // alert('Configuration has reset');\n    this.toasterService.pop('info', 'Configuration has reset!');\n  }\n\n  onNewValue() {\n    this.currentKey = this.currentKeys[Math.floor(Math.random() * this.currentKeys.length)];\n    this.currentChordType = this.currentChordTypes[Math.floor(Math.random() * this.currentChordTypes.length)];\n    this.currentChordTone = this.currentChordTones[Math.floor(Math.random() * this.currentChordTones.length)];\n  }\n\n  ngOnInit() {\n    for (let i = 0; i < this.keys.length; i++) {\n      if (this.keys[i]) {\n        this.currentKeys.push(keyArr[i]);\n      }\n    }\n\n    for (let i = 0; i < this.chordTypes.length; i++) {\n      if (this.chordTypes[i]) {\n        this.currentChordTypes.push(chordTypeArr[i]);\n      }\n    }\n\n    for (let i = 0; i < this.chordToneNumber.length; i++) {\n      if (this.chordToneNumber[i]) {\n        this.currentChordTones.push(chordToneNumberArr[i]);\n      }\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2LWJhci9uYXYtYmFyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Tools for Your Jazz Study</a>\\n\\n</nav>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}